"use strict";(self.webpackChunkbrave_wallet_docs=self.webpackChunkbrave_wallet_docs||[]).push([[914],{3905:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>u});var r=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},o=Object.keys(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var p=r.createContext({}),s=function(e){var t=r.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},c=function(e){var t=s(e.components);return r.createElement(p.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,o=e.originalType,p=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),m=s(a),u=n,v=m["".concat(p,".").concat(u)]||m[u]||d[u]||o;return a?r.createElement(v,l(l({ref:t},c),{},{components:a})):r.createElement(v,l({ref:t},c))}));function u(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=a.length,l=new Array(o);l[0]=m;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i.mdxType="string"==typeof e?e:n,l[1]=i;for(var s=2;s<o;s++)l[s]=a[s];return r.createElement.apply(null,l)}return r.createElement.apply(null,a)}m.displayName="MDXCreateElement"},1182:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>d,frontMatter:()=>o,metadata:()=>i,toc:()=>s});var r=a(7462),n=(a(7294),a(3905));const o={sidebar_position:1},l="Brave Wallet detection",i={unversionedId:"solana/provider-api/provider-detection",id:"solana/provider-api/provider-detection",title:"Brave Wallet detection",description:"Compatibility with Phantom",source:"@site/docs/solana/provider-api/provider-detection.md",sourceDirName:"solana/provider-api",slug:"/solana/provider-api/provider-detection",permalink:"/solana/provider-api/provider-detection",draft:!1,editUrl:"https://github.com/brave/brave-wallet-docs/edit/main/docs/solana/provider-api/provider-detection.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Overview",permalink:"/solana"},next:{title:"Methods",permalink:"/solana/provider-api/methods"}},p={},s=[{value:"Compatibility with Phantom",id:"compatibility-with-phantom",level:2},{value:"Synchronous detection",id:"synchronous-detection",level:2},{value:"Wallet adapter",id:"wallet-adapter",level:2}],c={toc:s};function d(e){let{components:t,...a}=e;return(0,n.kt)("wrapper",(0,r.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"brave-wallet-detection"},"Brave Wallet detection"),(0,n.kt)("h2",{id:"compatibility-with-phantom"},"Compatibility with Phantom"),(0,n.kt)("p",null,"Since Brave Wallet aims to be compatible with Phantom's exposed API, we set ",(0,n.kt)("inlineCode",{parentName:"p"},"window.braveSolana.isPhantom")," to ",(0,n.kt)("inlineCode",{parentName:"p"},"true"),".\nAlso ",(0,n.kt)("inlineCode",{parentName:"p"},"window.solana")," is an alias of ",(0,n.kt)("inlineCode",{parentName:"p"},"window.braveSolana"),"."),(0,n.kt)("h2",{id:"synchronous-detection"},"Synchronous detection"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},"const isBraveWallet = window.braveSolana.isBraveWallet\nconsole.log('Brave Wallet: ', isBraveWallet)\n")),(0,n.kt)("h2",{id:"wallet-adapter"},"Wallet adapter"),(0,n.kt)("p",null,"Brave Wallet has its own\n",(0,n.kt)("a",{parentName:"p",href:"https://github.com/solana-labs/wallet-adapter/tree/master/packages/wallets/brave"},"BraveWalletAdapter"),"\nand also compatible with\n",(0,n.kt)("a",{parentName:"p",href:"https://github.com/solana-labs/wallet-adapter/tree/master/packages/wallets/phantom"},"PhantomWalletAdapter"),".\nExamples can be found ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/solana-labs/wallet-adapter"},"here"),"."),(0,n.kt)("p",null,"Here is how to add Brave Wallet into example code"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-diff"},"diff --git a/packages/starter/example/components/ContextProvider.tsx b/packages/starter/example/components/ContextProvider.tsx\nindex 8b35f473..28398e46 100644\n--- a/packages/starter/example/components/ContextProvider.tsx\n+++ b/packages/starter/example/components/ContextProvider.tsx\n@@ -6,7 +6,7 @@ import { WalletAdapterNetwork } from '@solana/wallet-adapter-base';\n import { WalletDialogProvider as MaterialUIWalletDialogProvider } from '@solana/wallet-adapter-material-ui';\n import { ConnectionProvider, WalletProvider } from '@solana/wallet-adapter-react';\n import { WalletModalProvider as ReactUIWalletModalProvider } from '@solana/wallet-adapter-react-ui';\n-import { FakeWalletAdapter } from '@solana/wallet-adapter-wallets';\n+import { BraveWalletAdapter } from '@solana/wallet-adapter-wallets';\n import { clusterApiUrl } from '@solana/web3.js';\n import { SnackbarProvider, useSnackbar } from 'notistack';\n import type { FC, ReactNode } from 'react';\n@@ -67,7 +67,7 @@ const WalletContextProvider: FC<{ children: ReactNode }> = ({ children }) => {\n              * will be compiled into your application, and only the dependencies of wallets that\n              * your users connect to will be loaded.\n              */\n-            new FakeWalletAdapter(),\n+            new BraveWalletAdapter(),\n         ],\n         []\n     );\n")))}d.isMDXComponent=!0}}]);