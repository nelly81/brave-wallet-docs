"use strict";(self.webpackChunkbrave_wallet_docs=self.webpackChunkbrave_wallet_docs||[]).push([[111],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>w});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),d=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=d(e.components);return a.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),u=d(n),w=r,m=u["".concat(s,".").concat(w)]||u[w]||c[w]||l;return n?a.createElement(m,i(i({ref:t},p),{},{components:n})):a.createElement(m,i({ref:t},p))}));function w(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,i=new Array(l);i[0]=u;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:r,i[1]=o;for(var d=2;d<l;d++)i[d]=n[d];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},8864:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>c,frontMatter:()=>l,metadata:()=>o,toc:()=>d});var a=n(7462),r=(n(7294),n(3905));const l={sidebar_position:5},i="Default Wallet setting",o={unversionedId:"default-wallet",id:"default-wallet",title:"Default Wallet setting",description:"We expose a setting in brave://settings/wallet to control how Brave makes the provider objects available (window.ethereum and window.braveSolana and its alias window.solana)",source:"@site/docs/default-wallet.md",sourceDirName:".",slug:"/default-wallet",permalink:"/default-wallet",draft:!1,editUrl:"https://github.com/brave/brave-wallet-docs/edit/main/docs/default-wallet.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"Restrictions for providers",permalink:"/provider-availability"},next:{title:"Overview",permalink:"/ethereum"}},s={},d=[],p={toc:d};function c(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"default-wallet-setting"},"Default Wallet setting"),(0,r.kt)("p",null,"We expose a setting in ",(0,r.kt)("inlineCode",{parentName:"p"},"brave://settings/wallet")," to control how Brave makes the provider objects available (",(0,r.kt)("inlineCode",{parentName:"p"},"window.ethereum")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"window.braveSolana")," and its alias ",(0,r.kt)("inlineCode",{parentName:"p"},"window.solana"),")"),(0,r.kt)("p",null,"Since extensions sometimes also provide these objects, this setting will help decide which wallet handles these objects."),(0,r.kt)("p",null,"Here's a description of each setting:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Extensions (Brave Wallet fallback)")," - This is the default. Brave Wallet will expose ",(0,r.kt)("inlineCode",{parentName:"li"},"window.ethereum")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"window.braveSolana")," but allow other extensions such as MetaMask to overwrite it."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Brave Wallet")," - Exposes ",(0,r.kt)("inlineCode",{parentName:"li"},"window.ethereum")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"window.braveSolana")," and prevents sites and extensions from changing them."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Extensions (no fallback)")," - ",(0,r.kt)("inlineCode",{parentName:"li"},"window.ethereum")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"window.braveSolana")," will not be provided by Brave Wallet at all. If you have enabled an extension such as MetaMask, it is free to use the provider object."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Crypto Wallets (Deprecated)")," - Gives access to the old deprecated wallet. This option is not compatible with other extensions such as MetaMask.")),(0,r.kt)("p",null,"After changing the default wallet, it is best to restart your browser. Why?"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"If you had Brave Wallet loaded, it won't be unloaded until the next restart. When Brave Wallet is loaded it will not work properly with other extensions trying to access ",(0,r.kt)("inlineCode",{parentName:"li"},"window.ethereum"),"."),(0,r.kt)("li",{parentName:"ul"},"Existing tabs (ones already opened) will not change to use the new wallet setting, you need a new tab or a browser restart.")))}c.isMDXComponent=!0}}]);